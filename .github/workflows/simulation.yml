name: simulation
run-name: ${{ github.actor }} running HDL simulations
on:
  [push]
jobs:
  changes:
    runs-on: self-hosted
    permissions:
      pull-requests: read
    outputs:
      cobble: ${{ steps.filter.outputs.cobble }}
      buck2: ${{ steps.filter.outputs.buck2 }}
      grapefruit: ${{ steps.filter.outputs.grapefruit }}
      cosmo_hp: ${{ steps.filter.outputs.cosmo_hp }}
      cosmo_seq: ${{ steps.filter.outputs.cosmo_seq }}
      cosmo_ignition: ${{ steps.filter.outputs.cosmo_ignition }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: .github/filters.yml
          
  vunit-sim:
    needs: changes
    # This is starting to get a bit ugly here
    if: ${{ needs.changes.outputs.buck2 == 'true' || needs.changes.outputs.grapefruit == 'true' || needs.changes.outputs.cosmo_hp == 'true' || needs.changes.outputs.cosmo_seq == 'true' || needs.changes.outputs.cosmo_ignition == 'true'}}
    runs-on: self-hosted
    steps:
        - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
        - name: Check out repository code
          uses: actions/checkout@v4
          with:
            submodules: 'true'
        - name: Update pip reqs
          run : python3 -m pip install --upgrade -r tools/requirements.txt --break-system-packages
        - name: buck path
          run: echo "~/.cargo/bin" >> "$GITHUB_PATH"
        - name: Run VUnit tests
          run: set -o pipefail; buck2 bxl //tools/vunit-sims.bxl:vunit_sim_gen | while IFS= read -r line; do echo "$line"; eval "$line" ; done
        - name: Cleanup
          run: bash .github/cleanup.sh
  
  bsv-sim:
    needs: changes
    if: ${{ needs.changes.outputs.cobble == 'true' }}
    runs-on: self-hosted
    steps:
        - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
        - name: Check out repository code
          uses: actions/checkout@v4
          with:
            submodules: 'true'
            fetch-depth: 0
        - name: Update pip reqs
          run : python3 -m pip install --upgrade -r tools/requirements.txt --break-system-packages
        - name: Env setup
          run: cp BUILD.vars.gha BUILD.vars && echo "/opt/bsc-2022.01/bin" >> "$GITHUB_PATH"
        - name: Restore build-dir
          run: if [ -d /tmp/cobble_build_bkup ]; then cp -R /tmp/cobble_build_bkup ./build; else mkdir ./build; fi
        - name: cobble init
          run: ../vnd/cobble/cobble init .. --reinit
          working-directory: ./build
        - name: Run BSIM tests
          run: ./cobble bluesim_test "//.*Test.*"
          working-directory: ./build
        - name: backup build-dir
          run: cp -R ./build /tmp/cobble_build_bkup
        - name: Cleanup
          run: bash .github/cleanup.sh
load("//tools:hdl.bzl", "vhdl_unit", "black_box")
load("//tools:rdl.bzl", "rdl_file")
load("//tools:vivado.bzl", "vivado_bitstream")

rdl_file(
    name = "cosmo_seq_top_rdl",
    src = "cosmo_seq_top.rdl",
    deps = [
        "//hdl/ip/vhd/info:info_regs_rdl",
        "//hdl/projects/cosmo_seq/sp_i2c_subsystem:sp_i2c_regs_rdl",
        "//hdl/projects/cosmo_seq/sequencer:sequencer_regs_rdl",
        "//hdl/ip/vhd/spi_nor_controller:spi_nor_regs_rdl",
        "//hdl/ip/vhd/espi:espi_regs_rdl",
    ],
    outputs = [
        "cosmo_seq_top.html", 
        "cosmo_seq_top.json"
    ]
)

black_box (
    name = "cosmo_black_boxes",
    srcs = glob(["black_box_entities/*.vhd"]),
)
# Shared with grapefruit
vhdl_unit(
    name = "reset_sync",
    srcs = ["board_support/reset_sync.vhd"],
    deps = ["//hdl/ip/vhd/synchronizers:async_reset_bridge"],
    visibility = ["PUBLIC"],
)

vhdl_unit(
    name = "board_support",
    srcs = glob(["board_support/*.vhd"], exclude = ["board_support/reset_sync.vhd"]),
    deps = [
        ":reset_sync",
        ":cosmo_black_boxes",
        "//hdl/ip/vhd/info:info",
    ],
    standard = "2019",
)


vhdl_unit(
    name = "cosmo_seq_top",
    srcs = ["cosmo_seq_top.vhd"],
    deps = [
        ":cosmo_seq_top_rdl",
        ":board_support",
        "//hdl/ip/vhd/axi_blocks:axilite_common_pkg",
        "//hdl/ip/vhd/axi_blocks:axil_interconnect",
        "//hdl/ip/vhd/fmc_if:stm32h7_fmc_target",
        "//hdl/projects/cosmo_seq/sp5_espi_flash_subsystem:sp5_espi_flash_subsystem",
        "//hdl/projects/cosmo_seq/sp5_uart_subsystem:sp5_uart_subsystem",
        "//hdl/projects/cosmo_seq/sequencer:sequencer",
        "//hdl/projects/cosmo_seq/sp_i2c_subsystem:sp_i2c_subsystem",
        "//hdl/projects/cosmo_seq/sp5_hotplug_subsystem:sp5_hotplug_subsystem",
    ],
    standard = "2019",
)

vivado_bitstream(
    name="cosmo_seq",
    top_entity_name="cosmo_seq_top",
    top= ":cosmo_seq_top",
    part= "xc7s100fgga484-1",
    constraints=glob(["*.xdc"]),
    pre_synth_tcl_files=glob(["xilinx_ip_gen/*.tcl"]),
    #post_synth_tcl_files=glob(["*ila.tcl"]),
)